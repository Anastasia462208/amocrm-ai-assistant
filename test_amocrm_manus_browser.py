#!/usr/bin/env python3
"""
AmoCRM + Manus Integration —á–µ—Ä–µ–∑ Browser Tools
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–º –æ–∫–Ω–µ AmoCRM
"""

import requests
import json
import time
from datetime import datetime

class AmoCRMManusTest:
    def __init__(self):
        print("üß™ –¢–ï–°–¢: AmoCRM + Manus Integration")
        print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ–µ –æ–∫–Ω–æ AmoCRM")
        print("="*50)
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Manus API
        self.manus_config = {
            'api_key': 'sk-w3WopZM2I_Wxoltnbv0BHXP_ygv3cb53HW3Wa0Myp18ZP_ol1EfrF9gorM4Nl8rycZLLJupyvG_Y80aMtr7gpsgeogoc',
            'base_url': 'https://api.manus.run/v1',
            'mode': 'fast'
        }
        
        # –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –¥–ª—è Manus
        self.knowledge_base = """
–í—ã - AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ "–í—Å–µ –Ω–∞ —Å–ø–ª–∞–≤" (vsenasplav.ru).

–¢–£–†–´ –ù–ê 3 –î–ù–Ø:
1. "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏)
   - –¶–µ–Ω–∞: 18,000 —Ä—É–±/—á–µ–ª
   - –î–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏ –æ—Ç 8 –ª–µ—Ç
   - –ú–∞—Ä—à—Ä—É—Ç: –ö–æ—É—Ä–æ–≤–∫–∞ - –ß—É—Å–æ–≤–∞—è

2. "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏)
   - –¶–µ–Ω–∞: 20,000 —Ä—É–±/—á–µ–ª
   - –î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—É—Ä–∏—Å—Ç–æ–≤
   - –ú–∞—Ä—à—Ä—É—Ç: –°—Ç–∞—Ä–æ—É—Ç–∫–∏–Ω—Å–∫ - –ß—É—Å–æ–≤–∞—è

–í–ö–õ–Æ–ß–ï–ù–û –í –°–¢–û–ò–ú–û–°–¢–¨:
- –†–∞—Ñ—Ç –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
- –¢—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
- –û–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
- –¢—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞

–ë–õ–ò–ñ–ê–ô–®–ò–ï –î–ê–¢–´: 15-17 –∏—é–Ω—è, 22-24 –∏—é–Ω—è, 29 –∏—é–Ω—è-1 –∏—é–ª—è

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
- –û—Ç–≤–µ—á–∞–π—Ç–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ
- –ó–∞–¥–∞–≤–∞–π—Ç–µ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- –ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
- –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ü–µ–Ω—ã –∏ –¥–∞—Ç—ã
- –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —á–∞—Ç–∞
"""
        
        self.stats = {
            'manus_requests': 0,
            'responses_generated': 0,
            'start_time': datetime.now()
        }
    
    def send_to_manus(self, message_text):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Manus –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"""
        try:
            print(f"üß† –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Manus: {message_text}")
            print("-" * 50)
            
            prompt = f"""
{self.knowledge_base}

–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê:
"{message_text}"

–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –∏–º–µ–Ω–∏ —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—É —á–µ—Ä–µ–∑ —á–∞—Ç AmoCRM.
"""
            
            headers = {
                'Authorization': f"Bearer {self.manus_config['api_key']}",
                'Content-Type': 'application/json'
            }
            
            data = {
                'prompt': prompt,
                'mode': self.manus_config['mode']
            }
            
            print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Manus API...")
            
            response = requests.post(
                f"{self.manus_config['base_url']}/tasks",
                headers=headers,
                json=data,
                timeout=30
            )
            
            if response.status_code == 200:
                result = response.json()
                task_id = result.get('task_id')
                task_url = result.get('url')
                
                print(f"‚úÖ –ó–∞–¥–∞—á–∞ Manus —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                print(f"üìã Task ID: {task_id}")
                print(f"üîó URL: {task_url}")
                
                self.stats['manus_requests'] += 1
                
                return {
                    'task_id': task_id,
                    'url': task_url,
                    'status': 'created'
                }
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ Manus API: {response.status_code}")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                return None
                
        except requests.exceptions.Timeout:
            print("‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ Manus API")
            return None
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Manus: {e}")
            return None
    
    def get_mock_manus_response(self, task_id, original_message):
        """–ü–æ–ª—É—á–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É –æ—Ç–≤–µ—Ç–∞ –æ—Ç Manus (–∏–º–∏—Ç–∞—Ü–∏—è)"""
        try:
            print(f"‚è≥ –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Manus –¥–ª—è –∑–∞–¥–∞—á–∏: {task_id}")
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            time.sleep(2)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ—Ç–≤–µ—Ç
            message_lower = original_message.lower()
            
            if "3 –¥–Ω—è" in message_lower or "—Ç—Ä–∏ –¥–Ω—è" in message_lower:
                mock_response = """–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–∏–º —Ç—É—Ä–∞–º! üòä

–ü–æ —Ç—É—Ä–∞–º –Ω–∞ 3 –¥–Ω—è —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ –æ—Ç–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞:

üåü "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 18,000 —Ä—É–±/—á–µ–ª
–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏ –æ—Ç 8 –ª–µ—Ç
–ú–∞—Ä—à—Ä—É—Ç: –ö–æ—É—Ä–æ–≤–∫–∞ - –ß—É—Å–æ–≤–∞—è

üåü "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 20,000 —Ä—É–±/—á–µ–ª  
–î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞
–ú–∞—Ä—à—Ä—É—Ç: –°—Ç–∞—Ä–æ—É—Ç–∫–∏–Ω—Å–∫ - –ß—É—Å–æ–≤–∞—è

–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–æ: —Ä–∞—Ñ—Ç –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ, —Ç—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ, –æ–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞.

–ë–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã: 15-17 –∏—é–Ω—è, 22-24 –∏—é–Ω—è, 29 –∏—é–Ω—è-1 –∏—é–ª—è.

–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞—Å –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"""
            
            elif "—Ü–µ–Ω–∞" in message_lower or "—Å—Ç–æ–∏–º–æ—Å—Ç—å" in message_lower:
                mock_response = """–¶–µ–Ω—ã –Ω–∞ –Ω–∞—à–∏ —Ç—É—Ä—ã:

üí∞ "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 18,000 —Ä—É–±/—á–µ–ª
üí∞ "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 20,000 —Ä—É–±/—á–µ–ª

–í —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–∂–µ –≤–∫–ª—é—á–µ–Ω–æ –í–°–ï –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ:
‚úÖ –†–∞—Ñ—Ç –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
‚úÖ –¢—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ  
‚úÖ –û–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
‚úÖ –¢—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞

–ù–∏–∫–∞–∫–∏—Ö –¥–æ–ø–ª–∞—Ç! –ö–∞–∫–æ–π —Ç—É—Ä –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"""
            
            elif "–¥–∞—Ç–∞" in message_lower or "–∫–æ–≥–¥–∞" in message_lower:
                mock_response = """üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã –¥–ª—è —Ç—É—Ä–æ–≤:

üóìÔ∏è 15-17 –∏—é–Ω—è (–ø—è—Ç–Ω–∏—Ü–∞-–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
üóìÔ∏è 22-24 –∏—é–Ω—è (–ø—è—Ç–Ω–∏—Ü–∞-–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)  
üóìÔ∏è 29 –∏—é–Ω—è - 1 –∏—é–ª—è (–ø—è—Ç–Ω–∏—Ü–∞-–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)

–í—Å–µ —Ç—É—Ä—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –≤ –ø—è—Ç–Ω–∏—Ü—É —É—Ç—Ä–æ–º, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤–µ—á–µ—Ä–æ–º.

–ö–∞–∫–∞—è –¥–∞—Ç–∞ –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç –±–æ–ª—å—à–µ?"""
            
            else:
                mock_response = """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ "–í—Å–µ –Ω–∞ —Å–ø–ª–∞–≤" üòä

–ú—ã –æ—Ä–≥–∞–Ω–∏–∑—É–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ —Å–ø–ª–∞–≤—ã –ø–æ —Ä–µ–∫–µ –ß—É—Å–æ–≤–∞—è. –£ –Ω–∞—Å –µ—Å—Ç—å —Ç—É—Ä—ã —Ä–∞–∑–Ω–æ–π –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.

–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:
‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—É—Ä–∞?
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤?
‚Ä¢ –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞—Ç—ã?

–ü–æ–¥–±–µ—Ä—É –¥–ª—è –≤–∞—Å –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç!"""
            
            print("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç Manus (–∏–º–∏—Ç–∞—Ü–∏—è) –ø–æ–ª—É—á–µ–Ω")
            self.stats['responses_generated'] += 1
            
            return mock_response
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞: {e}")
            return None
    
    def test_full_cycle(self, test_message):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        try:
            print("\\n" + "="*70)
            print("üîÑ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –¶–ò–ö–õ–ê: –°–æ–æ–±—â–µ–Ω–∏–µ ‚Üí Manus ‚Üí –ì–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç")
            print("="*70)
            
            print(f"üì• –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞:")
            print(f'"{test_message}"')
            print()
            
            # –®–∞–≥ 1: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Manus
            manus_result = self.send_to_manus(test_message)
            if not manus_result:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Manus")
                return False
            
            print()
            
            # –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç (–∏–º–∏—Ç–∞—Ü–∏—è)
            ai_response = self.get_mock_manus_response(manus_result['task_id'], test_message)
            if not ai_response:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç")
                return False
            
            print()
            print("üìù –ì–û–¢–û–í–´–ô –û–¢–í–ï–¢ –î–õ–Ø –í–°–¢–ê–í–ö–ò –í –ü–û–õ–ï –í–í–û–î–ê:")
            print("=" * 50)
            print(ai_response)
            print("=" * 50)
            print()
            
            print("‚úÖ –¢–ï–°–¢ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù!")
            print("üë§ –≠—Ç–æ—Ç –æ—Ç–≤–µ—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ AmoCRM")
            print("üîó Manus Task URL:", manus_result['url'])
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
            return False
    
    def show_stats(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        uptime = datetime.now() - self.stats['start_time']
        
        print("\\n" + "="*50)
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        print("="*50)
        print(f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime}")
        print(f"üß† –ó–∞–ø—Ä–æ—Å–æ–≤ –∫ Manus: {self.stats['manus_requests']}")
        print(f"üìù –û—Ç–≤–µ—Ç–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {self.stats['responses_generated']}")
        print("="*50)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AmoCRM + Manus Integration")
    print("–†–∞–±–æ—Ç–∞–µ—Ç —Å —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—ã–º –æ–∫–Ω–æ–º AmoCRM")
    print()
    
    tester = AmoCRMManusTest()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    test_messages = [
        "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ —É –≤–∞—Å –µ—Å—Ç—å —Ç—É—Ä—ã –Ω–∞ 3 –¥–Ω—è?",
        "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —Å–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤?", 
        "–ö–∞–∫–∏–µ –¥–∞—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã –≤ –∏—é–Ω–µ?",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç —Å–ø–ª–∞–≤—ã –¥–ª—è —Å–µ–º—å–∏"
    ]
    
    print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
    for i, msg in enumerate(test_messages, 1):
        print(f"{i}. {msg}")
    print()
    
    while True:
        print("\\n" + "="*50)
        print("üìã –ú–ï–ù–Æ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        print("1-4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print("5. –í–≤–µ—Å—Ç–∏ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print("6. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("7. –í—ã—Ö–æ–¥")
        print("="*50)
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-7): ").strip()
        
        if choice in ['1', '2', '3', '4']:
            idx = int(choice) - 1
            message = test_messages[idx]
            print(f"\\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ {choice}: {message}")
            tester.test_full_cycle(message)
            
        elif choice == '5':
            custom_message = input("\\n–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ").strip()
            if custom_message:
                tester.test_full_cycle(custom_message)
            else:
                print("‚ùå –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
                
        elif choice == '6':
            tester.show_stats()
            
        elif choice == '7':
            print("üëã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            break
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main()
