#!/usr/bin/env python3
"""
AmoCRM + Manus + Selenium Integration
–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ‚Üí –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —á–µ—Ä–µ–∑ Manus ‚Üí –í—Å—Ç–∞–≤–ª—è–µ—Ç –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —á–∞—Ç–∞
"""

import requests
import json
import time
import sqlite3
from datetime import datetime
import logging
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.keys import Keys

class AmoCRMManusChat:
    def __init__(self):
        print("ü§ñ AmoCRM + Manus + Chat Integration")
        print("–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ‚Üí Manus –∞–Ω–∞–ª–∏–∑ ‚Üí –ì–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞")
        print("="*70)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
        self.logger = logging.getLogger('AmoCRMManusChat')
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è AmoCRM
        self.amocrm_config = {
            'login_url': 'https://www.amocrm.ru/auth/login',
            'subdomain': 'amoshturm',
            'email': 'amoshturm@gmail.com',
            'password': 'GbbT4Z5L'
        }
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Manus API
        self.manus_config = {
            'api_key': 'sk-w3WopZM2I_Wxoltnbv0BHXP_ygv3cb53HW3Wa0Myp18ZP_ol1EfrF9gorM4Nl8rycZLLJupyvG_Y80aMtr7gpsgeogoc',
            'base_url': 'https://api.manus.run/v1',
            'mode': 'fast'
        }
        
        # –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –¥–ª—è Manus
        self.knowledge_base = """
–í—ã - AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ "–í—Å–µ –Ω–∞ —Å–ø–ª–∞–≤" (vsenasplav.ru).

–¢–£–†–´ –ù–ê 3 –î–ù–Ø:
1. "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏)
   - –¶–µ–Ω–∞: 18,000 —Ä—É–±/—á–µ–ª
   - –î–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏ –æ—Ç 8 –ª–µ—Ç
   - –ú–∞—Ä—à—Ä—É—Ç: –ö–æ—É—Ä–æ–≤–∫–∞ - –ß—É—Å–æ–≤–∞—è

2. "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏)
   - –¶–µ–Ω–∞: 20,000 —Ä—É–±/—á–µ–ª
   - –î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—É—Ä–∏—Å—Ç–æ–≤
   - –ú–∞—Ä—à—Ä—É—Ç: –°—Ç–∞—Ä–æ—É—Ç–∫–∏–Ω—Å–∫ - –ß—É—Å–æ–≤–∞—è

–í–ö–õ–Æ–ß–ï–ù–û –í –°–¢–û–ò–ú–û–°–¢–¨:
- –†–∞—Ñ—Ç –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
- –¢—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
- –û–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
- –¢—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞

–ë–õ–ò–ñ–ê–ô–®–ò–ï –î–ê–¢–´: 15-17 –∏—é–Ω—è, 22-24 –∏—é–Ω—è, 29 –∏—é–Ω—è-1 –∏—é–ª—è

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
- –û—Ç–≤–µ—á–∞–π—Ç–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ
- –ó–∞–¥–∞–≤–∞–π—Ç–µ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- –ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
- –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ü–µ–Ω—ã –∏ –¥–∞—Ç—ã
- –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
"""
        
        # –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è AmoCRM
        self.selectors = {
            'chat_input': '.control-contenteditable__area.feed-compose__message[contenteditable="true"]',
            'messages': '.feed-note__message_paragraph',
            'send_button': 'button:contains("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")',
            'chat_container': '.feed-compose'
        }
        
        # –ë—Ä–∞—É–∑–µ—Ä
        self.driver = None
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        self.init_database()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.stats = {
            'messages_analyzed': 0,
            'responses_prepared': 0,
            'manus_requests': 0,
            'start_time': datetime.now()
        }
    
    def init_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
        try:
            self.db_conn = sqlite3.connect('amocrm_manus_chat.db')
            self.db_cursor = self.db_conn.cursor()
            
            self.db_cursor.execute('''
                CREATE TABLE IF NOT EXISTS chat_sessions (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    client_name TEXT,
                    incoming_message TEXT,
                    manus_task_id TEXT,
                    prepared_response TEXT,
                    status TEXT,
                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            ''')
            
            self.db_conn.commit()
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
    
    def setup_browser(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä"""
        try:
            print("üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞...")
            
            chrome_options = Options()
            chrome_options.add_argument('--no-sandbox')
            chrome_options.add_argument('--disable-dev-shm-usage')
            chrome_options.add_argument('--disable-gpu')
            chrome_options.add_argument('--window-size=1920,1080')
            chrome_options.add_argument('--user-data-dir=/tmp/chrome_user_data')
            
            self.driver = webdriver.Chrome(options=chrome_options)
            self.driver.implicitly_wait(10)
            
            print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
            return False
    
    def login_to_amocrm(self):
        """–í—Ö–æ–¥–∏—Ç –≤ AmoCRM"""
        try:
            print("üîê –í—Ö–æ–¥ –≤ AmoCRM...")
            
            self.driver.get(self.amocrm_config['login_url'])
            time.sleep(3)
            
            # –í–≤–æ–¥–∏–º email
            email_field = WebDriverWait(self.driver, 10).until(
                EC.presence_of_element_located((By.NAME, "username"))
            )
            email_field.clear()
            email_field.send_keys(self.amocrm_config['email'])
            
            # –í–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å
            password_field = self.driver.find_element(By.NAME, "password")
            password_field.clear()
            password_field.send_keys(self.amocrm_config['password'])
            
            # –ù–∞–∂–∏–º–∞–µ–º –≤–æ–π—Ç–∏
            login_button = self.driver.find_element(By.CSS_SELECTOR, 'button[type="submit"]')
            login_button.click()
            
            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
            WebDriverWait(self.driver, 15).until(
                EC.url_contains("amocrm.ru")
            )
            
            print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ AmoCRM")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ AmoCRM: {e}")
            return False
    
    def navigate_to_chat(self, client_name="Anastasia"):
        """–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —á–∞—Ç—É —Å –∫–ª–∏–µ–Ω—Ç–æ–º"""
        try:
            print(f"üí¨ –ü–æ–∏—Å–∫ —á–∞—Ç–∞ —Å {client_name}...")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–¥–µ–ª–∫–∞–º/—á–∞—Ç–∞–º
            time.sleep(5)
            
            # –ò—â–µ–º —á–∞—Ç —Å –∫–ª–∏–µ–Ω—Ç–æ–º (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
            # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç
            current_url = self.driver.current_url
            print(f"üìç –¢–µ–∫—É—â–∏–π URL: {current_url}")
            
            # –ï—Å–ª–∏ —É–∂–µ –≤ —á–∞—Ç–µ - –æ—Ç–ª–∏—á–Ω–æ
            if "feed" in current_url or "chat" in current_url:
                print("‚úÖ –£–∂–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —á–∞—Ç–∞")
                return True
            
            # –ò–Ω–∞—á–µ –∏—â–µ–º —á–∞—Ç (–∑–¥–µ—Å—å –Ω—É–∂–Ω–∞ –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞)
            print("üîç –ü–æ–∏—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–∞—Ç–∞...")
            time.sleep(3)
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —á–∞—Ç—É: {e}")
            return False
    
    def get_latest_message(self):
        """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞"""
        try:
            print("üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
            
            # –ò—â–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            messages = self.driver.find_elements(By.CSS_SELECTOR, self.selectors['messages'])
            
            if not messages:
                print("‚ùå –°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return None
            
            # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            latest_message = messages[-1]
            message_text = latest_message.text.strip()
            
            print(f"üì® –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if any(emoji in message_text for emoji in ['üö£‚Äç‚ôÇÔ∏è', 'üí∞', 'üìÖ', '‚úÖ']):
                print("‚ö†Ô∏è –≠—Ç–æ –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                return None
            
            return message_text
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return None
    
    def send_to_manus(self, message_text):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Manus –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"""
        try:
            print(f"üß† –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Manus: {message_text[:50]}...")
            
            prompt = f"""
{self.knowledge_base}

–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê:
{message_text}

–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –∏–º–µ–Ω–∏ —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∫–ª–∏–µ–Ω—Ç—É.
"""
            
            headers = {
                'Authorization': f"Bearer {self.manus_config['api_key']}",
                'Content-Type': 'application/json'
            }
            
            data = {
                'prompt': prompt,
                'mode': self.manus_config['mode']
            }
            
            response = requests.post(
                f"{self.manus_config['base_url']}/tasks",
                headers=headers,
                json=data
            )
            
            if response.status_code == 200:
                result = response.json()
                task_id = result.get('task_id')
                
                print(f"‚úÖ –ó–∞–¥–∞—á–∞ Manus —Å–æ–∑–¥–∞–Ω–∞: {task_id}")
                self.stats['manus_requests'] += 1
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
                self.db_cursor.execute('''
                    INSERT INTO chat_sessions (incoming_message, manus_task_id, status)
                    VALUES (?, ?, ?)
                ''', (message_text, task_id, 'processing'))
                self.db_conn.commit()
                
                return task_id
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ Manus API: {response.status_code}")
                return None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Manus: {e}")
            return None
    
    def get_manus_response(self, task_id):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç Manus (–∑–∞–≥–ª—É—à–∫–∞)"""
        try:
            print(f"‚è≥ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Manus –¥–ª—è –∑–∞–¥–∞—á–∏: {task_id}")
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            time.sleep(3)
            
            # –ó–∞–≥–ª—É—à–∫–∞ —Å –≥–æ—Ç–æ–≤—ã–º –æ—Ç–≤–µ—Ç–æ–º (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å —á–µ—Ä–µ–∑ API –∏–ª–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)
            mock_response = """–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–∏–º —Ç—É—Ä–∞–º! üòä

–ü–æ —Ç—É—Ä–∞–º –Ω–∞ 3 –¥–Ω—è —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ –æ—Ç–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞:

üåü "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 18,000 —Ä—É–±/—á–µ–ª
–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏ –æ—Ç 8 –ª–µ—Ç
–ú–∞—Ä—à—Ä—É—Ç: –ö–æ—É—Ä–æ–≤–∫–∞ - –ß—É—Å–æ–≤–∞—è

üåü "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 20,000 —Ä—É–±/—á–µ–ª  
–î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞
–ú–∞—Ä—à—Ä—É—Ç: –°—Ç–∞—Ä–æ—É—Ç–∫–∏–Ω—Å–∫ - –ß—É—Å–æ–≤–∞—è

–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–æ: —Ä–∞—Ñ—Ç –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ, —Ç—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ, –æ–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞.

–ë–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã: 15-17 –∏—é–Ω—è, 22-24 –∏—é–Ω—è, 29 –∏—é–Ω—è-1 –∏—é–ª—è.

–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞—Å –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"""
            
            print("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç Manus –ø–æ–ª—É—á–µ–Ω")
            return mock_response
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ Manus: {e}")
            return None
    
    def insert_response_to_chat(self, response_text):
        """–í—Å—Ç–∞–≤–ª—è–µ—Ç –≥–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —á–∞—Ç–∞"""
        try:
            print("üìù –í—Å—Ç–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —á–∞—Ç–∞...")
            
            # –ò—â–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            chat_input = WebDriverWait(self.driver, 10).until(
                EC.presence_of_element_located((By.CSS_SELECTOR, self.selectors['chat_input']))
            )
            
            # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
            chat_input.clear()
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
            chat_input.click()
            chat_input.send_keys(response_text)
            
            print("‚úÖ –û—Ç–≤–µ—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞!")
            print("üë§ –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
            
            self.stats['responses_prepared'] += 1
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ë–î
            self.db_cursor.execute('''
                UPDATE chat_sessions 
                SET prepared_response = ?, status = ?
                WHERE manus_task_id = (SELECT manus_task_id FROM chat_sessions ORDER BY id DESC LIMIT 1)
            ''', (response_text, 'ready'))
            self.db_conn.commit()
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {e}")
            return False
    
    def process_message_cycle(self):
        """–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            print("\\n" + "="*70)
            print("üîÑ –¶–ò–ö–õ –û–ë–†–ê–ë–û–¢–ö–ò: –°–æ–æ–±—â–µ–Ω–∏–µ ‚Üí Manus ‚Üí –ü–æ–ª–µ –≤–≤–æ–¥–∞")
            print("="*70)
            
            # –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = self.get_latest_message()
            if not message:
                print("‚ö†Ô∏è –ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç")
                return False
            
            self.stats['messages_analyzed'] += 1
            
            # –®–∞–≥ 2: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Manus
            task_id = self.send_to_manus(message)
            if not task_id:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Manus")
                return False
            
            # –®–∞–≥ 3: –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Manus
            response = self.get_manus_response(task_id)
            if not response:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç Manus")
                return False
            
            # –®–∞–≥ 4: –í—Å—Ç–∞–≤–ª—è–µ–º –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
            success = self.insert_response_to_chat(response)
            
            if success:
                print("\\n‚úÖ –¶–ò–ö–õ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
                print("üë§ –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç")
                return True
            else:
                print("\\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
            return False
    
    def monitor_chat(self, interval=30):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–∞—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π"""
        try:
            print(f"üëÅÔ∏è –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —á–∞—Ç–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ {interval} —Å–µ–∫)")
            print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            
            while True:
                try:
                    print(f"\\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π... ({datetime.now().strftime('%H:%M:%S')})")
                    
                    success = self.process_message_cycle()
                    
                    if success:
                        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, –æ—Ç–≤–µ—Ç –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ")
                    else:
                        print("‚ö†Ô∏è –ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
                    
                    print(f"‚è≥ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ {interval} —Å–µ–∫—É–Ω–¥...")
                    time.sleep(interval)
                    
                except KeyboardInterrupt:
                    print("\\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                    break
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
    
    def show_stats(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        uptime = datetime.now() - self.stats['start_time']
        
        print("\\n" + "="*50)
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê AmoCRM + Manus + Chat")
        print("="*50)
        print(f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime}")
        print(f"üì® –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {self.stats['messages_analyzed']}")
        print(f"üß† –ó–∞–ø—Ä–æ—Å–æ–≤ –∫ Manus: {self.stats['manus_requests']}")
        print(f"üìù –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤: {self.stats['responses_prepared']}")
        print("="*50)
    
    def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤"""
        try:
            if self.driver:
                self.driver.quit()
            if self.db_conn:
                self.db_conn.close()
            print("‚úÖ –†–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ AmoCRM + Manus + Chat Integration")
    print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —á–∞—Ç–∞")
    print()
    
    integration = AmoCRMManusChat()
    
    try:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
        if not integration.setup_browser():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä")
            return
        
        # –í—Ö–æ–¥ –≤ AmoCRM
        if not integration.login_to_amocrm():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ AmoCRM")
            return
        
        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —á–∞—Ç—É
        if not integration.navigate_to_chat():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —á–∞—Ç")
            return
        
        print("\\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        
        while True:
            print("\\n" + "="*50)
            print("üìã –ú–ï–ù–Æ:")
            print("1. –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            print("2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–∞—Ç–∞")
            print("3. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
            print("4. –í—ã—Ö–æ–¥")
            print("="*50)
            
            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()
            
            if choice == '1':
                integration.process_message_cycle()
            elif choice == '2':
                interval = input("–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30): ").strip()
                interval = int(interval) if interval.isdigit() else 30
                integration.monitor_chat(interval)
            elif choice == '3':
                integration.show_stats()
            elif choice == '4':
                print("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
                
    except KeyboardInterrupt:
        print("\\nüõë –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        integration.cleanup()

if __name__ == "__main__":
    main()
