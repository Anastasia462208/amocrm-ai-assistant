#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-—Ö—É–∫–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import time
import urllib.parse
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
WEBHOOK_URL = "http://127.0.0.1:8000"

def send_test_message(lead_id, message_text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –≤–µ–±-—Ö—É–∫"""
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –æ—Ç amoCRM
    timestamp = int(time.time())
    data = {
        'message[add][0][text]': message_text,
        'message[add][0][entity_id]': f'lead_{lead_id}',
        'message[add][0][entity_type]': 'lead',
        'message[add][0][created_at]': str(timestamp)
    }
    
    # –ö–æ–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ URL-encoded
    encoded_data = urllib.parse.urlencode(data)
    
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–¥–µ–ª–∫–∏ {lead_id}:")
    print(f"üí¨ –¢–µ–∫—Å—Ç: '{message_text}'")
    print(f"üïê –í—Ä–µ–º—è: {datetime.fromtimestamp(timestamp)}")
    
    try:
        response = requests.post(
            WEBHOOK_URL,
            data=encoded_data,
            headers={'Content-Type': 'application/x-www-form-urlencoded'},
            timeout=10
        )
        
        if response.status_code == 200:
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
    
    print("-" * 50)

def run_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–∏—é —Ç–µ—Å—Ç–æ–≤"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ï–ë-–•–£–ö–ê –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
    send_test_message(12345, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å–ø–ª–∞–≤ –ø–æ –ß—É—Å–æ–≤–æ–π")
    time.sleep(2)
    
    # –¢–µ—Å—Ç 2: –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–æ–≥–æ –∂–µ –∫–ª–∏–µ–Ω—Ç–∞
    send_test_message(12345, "–ö–∞–∫–∏–µ —É –≤–∞—Å –µ—Å—Ç—å —Ç—É—Ä—ã –Ω–∞ 3 –¥–Ω—è?")
    time.sleep(2)
    
    # –¢–µ—Å—Ç 3: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    send_test_message(67890, "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ—è—Ç –≤–∞—à–∏ —Ç—É—Ä—ã?")
    time.sleep(2)
    
    # –¢–µ—Å—Ç 4: –ï—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    send_test_message(12345, "–ö–∞–∫–∏–µ –±–ª–∏–∂–∞–π—à–∏–µ –¥–∞—Ç—ã?")
    time.sleep(2)
    
    # –¢–µ—Å—Ç 5: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    send_test_message(11111, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ò–Ω—Ç–µ—Ä–µ—Å—É—é—Ç —Å–ø–ª–∞–≤—ã –¥–ª—è —Å–µ–º—å–∏ —Å –¥–µ—Ç—å–º–∏.")
    
    print("\\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")

if __name__ == '__main__':
    run_tests()
