#!/usr/bin/env python3
"""
AmoCRM + Manus API Webhook Handler
–ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ä–∞–±–æ—á–µ–≥–æ –∫–æ–¥–∞ –ø–æ–¥ Manus API
"""

from http.server import BaseHTTPRequestHandler, HTTPServer
import logging
from urllib.parse import parse_qs
import json
import requests
import time
from datetime import datetime

# === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
SUBDOMAIN = 'amoshturm'
ACCESS_TOKEN = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjBjYjliYjRhZmI3ODNiOWNiMDA2Mzg5NWE1Nzg5MjhjMGViNDZlZTcxYzc2MGUwNGFjNTE3OGUzNWE4Mzk2MWZjNWI2NzQ2NDRjN2U5YmRlIn0.eyJhdWQiOiI3NWMyYjNlYi1kODM3LTQwNzktYjNkYS04YzJmOWU0OTRkNjYiLCJqdGkiOiIwY2I5YmI0YWZiNzgzYjljYjAwNjM4OTVhNTc4OTI4YzBlYjQ2ZWU3MWM3NjBlMDRhYzUxNzhlMzVhODM5NjFmYzViNjc0NjQ0YzdlOWJkZSIsImlhdCI6MTc0NTg0ODE4MiwibmJmIjoxNzQ1ODQ4MTgyLCJleHAiOjE4ODU0MjA4MDAsInN1YiI6IjEwNzg5NjU4IiwiZ3JhbnRfdHlwZSI6IiIsImFjY291bnRfaWQiOjMxNjI2NTMwLCJiYXNlX2RvbWFpbiI6ImFtb2NybS5ydSIsInZlcnNpb24iOjIsInNjb3BlcyI6WyJjcm0iLCJmaWxlcyIsImZpbGVzX2RlbGV0ZSIsIm5vdGlmaWNhdGlvbnMiLCJwdXNoX25vdGlmaWNhdGlvbnMiXSwiaGFzaF91dWlkIjoiZjdkNTczZWYtNWI0Zi00MjU2LWI1OGYtNjE3ODdmN2Q1ZmNlIiwiYXBpX2RvbWFpbiI6ImFwaS1iLmFtb2NybS5ydSJ9.GWNXTAz3_DPtNHZbBAiPkg9k77cwfhAnMZeMIfU15r9XMQ5g6r8EyH90xU4PLluNoi5kRRWxyimVELfuoK8JWS8fSYSEezxjwlPUsp2rBEbAlvD0AVVVtMcjRjicUSQ-qB7avcTHCsOSXR-P-ZkMkGcE0B_2RA-DqsxqYGHxnuQHtzDSmw8lgnl0aVrbBULhVIZEAK7gTufQTWJDDmcMttEYqYU-Bd2XReJ0f96K6k68b7CErnjp-uyRmjLEgKhkpdsF8Cx6bioqACXUqSPUNRmd6sRTU5RYC3J3SlTJONcx6TFToAfnXof0cjwnlxluetl8rwafrAulTr1kTrJeXQ"

# Manus API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
MANUS_API_KEY = 'sk-fNQLWaD5AHLplRB2fVDZ8lfKxVbbEEHWCzl_z016aM4_2EMtOSPtEfCUzhUOZq1DCufwtAAmfIeCn0QFZaS9DkBp2QS3'
MANUS_BASE_URL = 'https://api.manus.im/v1'

# –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞
KNOWLEDGE_BASE = """
–í—ã - AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ "–í—Å–µ –Ω–∞ —Å–ø–ª–∞–≤" (vsenasplav.ru).

–¢–£–†–´ –ù–ê 3 –î–ù–Ø:
1. "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 18,000 —Ä—É–±/—á–µ–ª
   - –î–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏ –æ—Ç 8 –ª–µ—Ç
   - –ú–∞—Ä—à—Ä—É—Ç: –ö–æ—É—Ä–æ–≤–∫–∞ - –ß—É—Å–æ–≤–∞—è
   - –°–ø–æ–∫–æ–π–Ω—ã–π —Å–ø–ª–∞–≤, –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –¥–µ—Ç–µ–π

2. "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 20,000 —Ä—É–±/—á–µ–ª
   - –î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—É—Ä–∏—Å—Ç–æ–≤
   - –ú–∞—Ä—à—Ä—É—Ç: –°—Ç–∞—Ä–æ—É—Ç–∫–∏–Ω—Å–∫ - –ß—É—Å–æ–≤–∞—è
   - –ë–æ–ª–µ–µ –¥–∏–Ω–∞–º–∏—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç

–í–ö–õ–Æ–ß–ï–ù–û –í –°–¢–û–ò–ú–û–°–¢–¨:
- –†–∞—Ñ—Ç –∏ –≤—Å–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
- –¢—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
- –û–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
- –¢—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞
- –°—Ç—Ä–∞—Ö–æ–≤–∫–∞

–ë–õ–ò–ñ–ê–ô–®–ò–ï –î–ê–¢–´: 15-17 –∏—é–Ω—è, 22-24 –∏—é–Ω—è, 29 –∏—é–Ω—è-1 –∏—é–ª—è

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
- –û—Ç–≤–µ—á–∞–π—Ç–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ
- –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ü–µ–Ω—ã –∏ –¥–∞—Ç—ã
- –ó–∞–¥–∞–≤–∞–π—Ç–µ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—É
"""

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
stats = {
    'messages_received': 0,
    'manus_requests': 0,
    'responses_sent': 0,
    'errors': 0,
    'start_time': datetime.now()
}

def send_to_manus_api(message_text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Manus API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    try:
        print(f"üß† –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Manus API: {message_text}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç —Å –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π
        prompt = f"""
{KNOWLEDGE_BASE}

–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê:
"{message_text}"

–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –∏–º–µ–Ω–∏ —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—É.
"""
        
        headers = {
            'Authorization': f'Bearer {MANUS_API_KEY}',
            'Content-Type': 'application/json'
        }
        
        data = {
            'prompt': prompt,
            'mode': 'fast'
        }
        
        response = requests.post(
            f'{MANUS_BASE_URL}/tasks',
            headers=headers,
            json=data,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            task_id = result.get('task_id')
            task_url = result.get('url')
            
            print(f"‚úÖ Manus –∑–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: {task_id}")
            stats['manus_requests'] += 1
            
            # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ –∂–¥–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç Manus
            # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–∞–∫ fallback
            return generate_local_response(message_text), task_url
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ Manus API: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return generate_local_response(message_text), None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Manus: {e}")
        return generate_local_response(message_text), None

def generate_local_response(message_text):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ (fallback)"""
    message_lower = message_text.lower()
    
    if "3 –¥–Ω—è" in message_lower or "—Ç—Ä–∏ –¥–Ω—è" in message_lower:
        return """–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–∏–º —Ç—É—Ä–∞–º! üòä

–ü–æ —Ç—É—Ä–∞–º –Ω–∞ 3 –¥–Ω—è —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ –æ—Ç–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞:

üåü "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 18,000 —Ä—É–±/—á–µ–ª
–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏ –æ—Ç 8 –ª–µ—Ç
–ú–∞—Ä—à—Ä—É—Ç: –ö–æ—É—Ä–æ–≤–∫–∞ - –ß—É—Å–æ–≤–∞—è

üåü "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 20,000 —Ä—É–±/—á–µ–ª  
–î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞
–ú–∞—Ä—à—Ä—É—Ç: –°—Ç–∞—Ä–æ—É—Ç–∫–∏–Ω—Å–∫ - –ß—É—Å–æ–≤–∞—è

–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–æ: —Ä–∞—Ñ—Ç –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ, —Ç—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ, –æ–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞.

–ë–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã: 15-17 –∏—é–Ω—è, 22-24 –∏—é–Ω—è, 29 –∏—é–Ω—è-1 –∏—é–ª—è.

–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞—Å –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"""
    
    elif "—Ü–µ–Ω–∞" in message_lower or "—Å—Ç–æ–∏–º–æ—Å—Ç—å" in message_lower:
        return """–¶–µ–Ω—ã –Ω–∞ –Ω–∞—à–∏ —Ç—É—Ä—ã:

üí∞ "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 18,000 —Ä—É–±/—á–µ–ª
üí∞ "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 20,000 —Ä—É–±/—á–µ–ª

–í —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–∂–µ –≤–∫–ª—é—á–µ–Ω–æ –í–°–ï –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ:
‚úÖ –†–∞—Ñ—Ç –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
‚úÖ –¢—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ  
‚úÖ –û–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
‚úÖ –¢—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞

–ù–∏–∫–∞–∫–∏—Ö –¥–æ–ø–ª–∞—Ç! –ö–∞–∫–æ–π —Ç—É—Ä –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"""
    
    elif "–¥–∞—Ç–∞" in message_lower or "–∫–æ–≥–¥–∞" in message_lower:
        return """üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã –¥–ª—è —Ç—É—Ä–æ–≤:

üóìÔ∏è 15-17 –∏—é–Ω—è (–ø—è—Ç–Ω–∏—Ü–∞-–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
üóìÔ∏è 22-24 –∏—é–Ω—è (–ø—è—Ç–Ω–∏—Ü–∞-–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)  
üóìÔ∏è 29 –∏—é–Ω—è - 1 –∏—é–ª—è (–ø—è—Ç–Ω–∏—Ü–∞-–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)

–í—Å–µ —Ç—É—Ä—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –≤ –ø—è—Ç–Ω–∏—Ü—É —É—Ç—Ä–æ–º, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤–µ—á–µ—Ä–æ–º.

–ö–∞–∫–∞—è –¥–∞—Ç–∞ –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç –±–æ–ª—å—à–µ?"""
    
    else:
        return """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ "–í—Å–µ –Ω–∞ —Å–ø–ª–∞–≤" üòä

–ú—ã –æ—Ä–≥–∞–Ω–∏–∑—É–µ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ —Å–ø–ª–∞–≤—ã –ø–æ —Ä–µ–∫–µ –ß—É—Å–æ–≤–∞—è. –£ –Ω–∞—Å –µ—Å—Ç—å —Ç—É—Ä—ã —Ä–∞–∑–Ω–æ–π –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.

–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:
‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—É—Ä–∞?
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤?
‚Ä¢ –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞—Ç—ã?

–ü–æ–¥–±–µ—Ä—É –¥–ª—è –≤–∞—Å –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç!"""

def send_reply_as_note(lead_id, text, manus_url=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –∫–∞–∫ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ —Å–¥–µ–ª–∫–µ"""
    url = f"https://{SUBDOMAIN}.amocrm.ru/api/v4/leads/{lead_id}/notes"
    
    headers = {
        "Authorization": f"Bearer {ACCESS_TOKEN}",
        "Content-Type": "application/json",
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Manus –∑–∞–¥–∞—á–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    note_text = text
    if manus_url:
        note_text += f"\\n\\nü§ñ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ Manus AI: {manus_url}"
    
    payload = [
        {
            "note_type": "common",
            "params": {
                "text": note_text
            }
        }
    ]

    try:
        res = requests.post(url, headers=headers, data=json.dumps(payload))
        res.raise_for_status()
        print(f"‚úÖ –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∫ —Å–¥–µ–ª–∫–µ {lead_id}")
        stats['responses_sent'] += 1
        return True
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è: {e}")
        if 'res' in locals():
            print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {res.text}")
        stats['errors'] += 1
        return False

def log_stats():
    """–í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–±–æ—Ç—ã"""
    uptime = datetime.now() - stats['start_time']
    print("\\n" + "="*50)
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ê–ë–û–¢–´")
    print("="*50)
    print(f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime}")
    print(f"üì• –°–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—É—á–µ–Ω–æ: {stats['messages_received']}")
    print(f"üß† –ó–∞–ø—Ä–æ—Å–æ–≤ –∫ Manus: {stats['manus_requests']}")
    print(f"üì§ –û—Ç–≤–µ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {stats['responses_sent']}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {stats['errors']}")
    print("="*50)

class ManusWebhookHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        post_data_raw = self.rfile.read(content_length)
        
        logging.info(f"POST request received. Body: {post_data_raw.decode('utf-8')}")
        
        parsed_data = parse_qs(post_data_raw.decode('utf-8'))
        
        if 'message[add][0][text]' in parsed_data:
            try:
                message_text = parsed_data['message[add][0][text]'][0]
                lead_id = parsed_data['message[add][0][entity_id]'][0]
                
                print(f"\\nüì• –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–¥–µ–ª–∫–∏ {lead_id}:")
                print(f"üí¨ –¢–µ–∫—Å—Ç: '{message_text}'")
                
                stats['messages_received'] += 1
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Manus API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
                ai_response, manus_url = send_to_manus_api(message_text)
                
                if ai_response:
                    print(f"\\nü§ñ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:")
                    print(f"üìù {ai_response[:100]}...")
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∫–∞–∫ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ
                    success = send_reply_as_note(lead_id, ai_response, manus_url)
                    
                    if success:
                        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞")
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç")
                    stats['errors'] += 1
                
                # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–∂–¥—ã–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
                if stats['messages_received'] % 10 == 0:
                    log_stats()

            except KeyError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
                stats['errors'] += 1
        else:
            print("‚ÑπÔ∏è –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. –ò–≥–Ω–æ—Ä–∏—Ä—É—é.")

        self.send_response(200)
        self.end_headers()

def run(server_class=HTTPServer, handler_class=ManusWebhookHandler, port=8000):
    logging.basicConfig(
        filename='manus_webhook_log.txt', 
        level=logging.INFO, 
        format='%(asctime)s - %(message)s', 
        filemode='w'
    )
    
    server_address = ('127.0.0.1', port)
    httpd = server_class(server_address, handler_class)
    
    print("üöÄ AmoCRM + Manus API Webhook Server")
    print("="*50)
    print(f"üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    print(f"üß† Manus API: {MANUS_BASE_URL}")
    print(f"üìä AmoCRM: {SUBDOMAIN}.amocrm.ru")
    print("="*50)
    print("‚úÖ –ì–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π!")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    print()
    
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        print("\\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
        log_stats()
    
    httpd.server_close()
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

if __name__ == '__main__':
    run()
