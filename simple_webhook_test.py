#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –≤–µ–±-—Ö—É–∫–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
"""

from database_manager import DatabaseManager
import json
from datetime import datetime

def test_database_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db = DatabaseManager('conversations.db')
    
    # –¢–µ—Å—Ç 1: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ 12345
    print("\\nüìù –¢–µ—Å—Ç 1: –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ 12345")
    
    lead_id = 12345
    message_text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å–ø–ª–∞–≤ –ø–æ –ß—É—Å–æ–≤–æ–π"
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    client_id = db.get_or_create_client(
        amocrm_contact_id=lead_id,
        name=f"–ö–ª–∏–µ–Ω—Ç –∏–∑ —Å–¥–µ–ª–∫–∏ {lead_id}"
    )
    print(f"üë§ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω/–Ω–∞–π–¥–µ–Ω: ID {client_id}")
    
    # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä
    conversation_id = db.get_or_create_conversation(
        client_id=client_id,
        amocrm_lead_id=lead_id
    )
    print(f"üí¨ –†–∞–∑–≥–æ–≤–æ—Ä —Å–æ–∑–¥–∞–Ω/–Ω–∞–π–¥–µ–Ω: ID {conversation_id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    message_id = db.add_message(
        conversation_id=conversation_id,
        sender_type='client',
        content=message_text,
        message_type='text',
        metadata={
            'amocrm_lead_id': lead_id,
            'amocrm_timestamp': int(datetime.now().timestamp()),
            'source': 'test'
        }
    )
    print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ID {message_id}")
    
    # –¢–µ—Å—Ç 2: –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–æ–≥–æ –∂–µ –∫–ª–∏–µ–Ω—Ç–∞
    print("\\nüìù –¢–µ—Å—Ç 2: –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ 12345")
    
    message_text2 = "–ö–∞–∫–∏–µ —É –≤–∞—Å –µ—Å—Ç—å —Ç—É—Ä—ã –Ω–∞ 3 –¥–Ω—è?"
    message_id2 = db.add_message(
        conversation_id=conversation_id,
        sender_type='client',
        content=message_text2,
        message_type='text',
        metadata={
            'amocrm_lead_id': lead_id,
            'amocrm_timestamp': int(datetime.now().timestamp()),
            'source': 'test'
        }
    )
    print(f"üìù –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ID {message_id2}")
    
    # –¢–µ—Å—Ç 3: –û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    print("\\nü§ñ –¢–µ—Å—Ç 3: –û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
    
    response_text = """–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–∏–º —Ç—É—Ä–∞–º! üòä

–ü–æ —Ç—É—Ä–∞–º –Ω–∞ 3 –¥–Ω—è —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ –æ—Ç–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞:

üåü "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 18,000 —Ä—É–±/—á–µ–ª
üåü "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏) - 20,000 —Ä—É–±/—á–µ–ª

–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞—Å –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"""
    
    response_id = db.add_message(
        conversation_id=conversation_id,
        sender_type='assistant',
        content=response_text,
        message_type='text',
        metadata={
            'amocrm_lead_id': lead_id,
            'source': 'ai_response'
        }
    )
    print(f"ü§ñ –û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ID {response_id}")
    
    # –¢–µ—Å—Ç 4: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    print("\\nüìù –¢–µ—Å—Ç 4: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ 67890")
    
    lead_id2 = 67890
    client_id2 = db.get_or_create_client(
        amocrm_contact_id=lead_id2,
        name=f"–ö–ª–∏–µ–Ω—Ç –∏–∑ —Å–¥–µ–ª–∫–∏ {lead_id2}"
    )
    
    conversation_id2 = db.get_or_create_conversation(
        client_id=client_id2,
        amocrm_lead_id=lead_id2
    )
    
    message_id3 = db.add_message(
        conversation_id=conversation_id2,
        sender_type='client',
        content="–°–∫–æ–ª—å–∫–æ —Å—Ç–æ—è—Ç –≤–∞—à–∏ —Ç—É—Ä—ã?",
        message_type='text',
        metadata={
            'amocrm_lead_id': lead_id2,
            'amocrm_timestamp': int(datetime.now().timestamp()),
            'source': 'test'
        }
    )
    print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –≤—Ç–æ—Ä–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞: ID {message_id3}")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    print("\\nüìã –¢–µ—Å—Ç 5: –ò—Å—Ç–æ—Ä–∏—è –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞ 12345")
    
    history = db.get_conversation_context(conversation_id, limit=10)
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(history)} —Å–æ–æ–±—â–µ–Ω–∏–π:")
    
    for i, msg in enumerate(history, 1):
        sender_icon = "üë§" if msg['sender_type'] == 'client' else "ü§ñ"
        print(f"  {i}. {sender_icon} {msg['sender_type']}: {msg['content'][:50]}...")
    
    print("\\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
    print("python3 view_database.py")

if __name__ == '__main__':
    test_database_integration()
