#!/usr/bin/env python3
"""
AmoCRM + Manus API Integration
–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: AmoCRM ‚Üí Manus ‚Üí AmoCRM
"""

import requests
import json
import time
import sqlite3
from datetime import datetime
import logging

class AmoCRMManusIntegration:
    def __init__(self):
        print("ü§ñ AmoCRM + Manus API Integration")
        print("="*50)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
        self.logger = logging.getLogger('AmoCRMManus')
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è AmoCRM
        self.amocrm_config = {
            'subdomain': 'amoshturm',
            'client_id': 'your_client_id',  # –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ AmoCRM
            'client_secret': 'your_client_secret',  # –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ AmoCRM
            'redirect_uri': 'https://example.com',
            'access_token': None,
            'refresh_token': None
        }
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Manus API
        self.manus_config = {
            'api_key': 'sk-w3WopZM2I_Wxoltnbv0BHXP_ygv3cb53HW3Wa0Myp18ZP_ol1EfrF9gorM4Nl8rycZLLJupyvG_Y80aMtr7gpsgeogoc',
            'base_url': 'https://api.manus.run/v1',
            'mode': 'fast'  # –∏–ª–∏ 'quality'
        }
        
        # –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –¥–ª—è Manus
        self.knowledge_base = """
–í—ã - AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ "–í—Å–µ –Ω–∞ —Å–ø–ª–∞–≤" (vsenasplav.ru).

–¢–£–†–´ –ù–ê 3 –î–ù–Ø:
1. "–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤" (3 –¥–Ω—è/2 –Ω–æ—á–∏)
   - –¶–µ–Ω–∞: 18,000 —Ä—É–±/—á–µ–ª
   - –î–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏ –æ—Ç 8 –ª–µ—Ç
   - –ú–∞—Ä—à—Ä—É—Ç: –ö–æ—É—Ä–æ–≤–∫–∞ - –ß—É—Å–æ–≤–∞—è

2. "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö" (3 –¥–Ω—è/2 –Ω–æ—á–∏)
   - –¶–µ–Ω–∞: 20,000 —Ä—É–±/—á–µ–ª
   - –î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—É—Ä–∏—Å—Ç–æ–≤
   - –ú–∞—Ä—à—Ä—É—Ç: –°—Ç–∞—Ä–æ—É—Ç–∫–∏–Ω—Å–∫ - –ß—É—Å–æ–≤–∞—è

–í–ö–õ–Æ–ß–ï–ù–û –í –°–¢–û–ò–ú–û–°–¢–¨:
- –†–∞—Ñ—Ç –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
- –¢—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
- –û–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
- –¢—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞

–ë–õ–ò–ñ–ê–ô–®–ò–ï –î–ê–¢–´: 15-17 –∏—é–Ω—è, 22-24 –∏—é–Ω—è, 29 –∏—é–Ω—è-1 –∏—é–ª—è

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
- –û—Ç–≤–µ—á–∞–π—Ç–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
- –ó–∞–¥–∞–≤–∞–π—Ç–µ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- –ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
- –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ü–µ–Ω—ã –∏ –¥–∞—Ç—ã
"""
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        self.init_database()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.stats = {
            'messages_processed': 0,
            'manus_requests': 0,
            'responses_sent': 0,
            'start_time': datetime.now()
        }
    
    def init_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤"""
        try:
            self.db_conn = sqlite3.connect('amocrm_manus_integration.db')
            self.db_cursor = self.db_conn.cursor()
            
            # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ AmoCRM
            self.db_cursor.execute('''
                CREATE TABLE IF NOT EXISTS amocrm_tokens (
                    id INTEGER PRIMARY KEY,
                    access_token TEXT,
                    refresh_token TEXT,
                    expires_at INTEGER,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            ''')
            
            # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤
            self.db_cursor.execute('''
                CREATE TABLE IF NOT EXISTS conversations (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    amocrm_lead_id INTEGER,
                    client_name TEXT,
                    message_text TEXT,
                    message_type TEXT,
                    manus_task_id TEXT,
                    response_text TEXT,
                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            ''')
            
            self.db_conn.commit()
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
    
    def get_amocrm_access_token(self):
        """–ü–æ–ª—É—á–∞–µ—Ç access token –¥–ª—è AmoCRM API"""
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
            self.db_cursor.execute(
                "SELECT access_token, refresh_token, expires_at FROM amocrm_tokens ORDER BY id DESC LIMIT 1"
            )
            result = self.db_cursor.fetchone()
            
            if result and result[2] > time.time():
                self.amocrm_config['access_token'] = result[0]
                self.amocrm_config['refresh_token'] = result[1]
                print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω AmoCRM")
                return True
            
            # –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω –∏—Å—Ç–µ–∫, –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            print("‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ AmoCRM")
            print("–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ AmoCRM:")
            print("1. –ó–∞–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AmoCRM ‚Üí –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
            print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é")
            print("3. –ü–æ–ª—É—á–∏—Ç–µ client_id –∏ client_secret")
            print("4. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –∫–æ–¥–µ")
            
            return False
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ AmoCRM: {e}")
            return False
    
    def get_amocrm_messages(self, lead_id=None):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ AmoCRM"""
        try:
            if not self.amocrm_config['access_token']:
                print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–∞ AmoCRM")
                return []
            
            headers = {
                'Authorization': f"Bearer {self.amocrm_config['access_token']}",
                'Content-Type': 'application/json'
            }
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫ (leads)
            if not lead_id:
                leads_url = f"https://{self.amocrm_config['subdomain']}.amocrm.ru/api/v4/leads"
                response = requests.get(leads_url, headers=headers)
                
                if response.status_code == 200:
                    leads = response.json().get('_embedded', {}).get('leads', [])
                    if leads:
                        lead_id = leads[0]['id']  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Å–¥–µ–ª–∫—É
                        print(f"üìã –†–∞–±–æ—Ç–∞–µ–º —Å–æ —Å–¥–µ–ª–∫–æ–π ID: {lead_id}")
                    else:
                        print("‚ùå –°–¥–µ–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                        return []
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–¥–µ–ª–æ–∫: {response.status_code}")
                    return []
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è (—Å–æ–æ–±—â–µ–Ω–∏—è) –ø–æ —Å–¥–µ–ª–∫–µ
            events_url = f"https://{self.amocrm_config['subdomain']}.amocrm.ru/api/v4/events"
            params = {
                'filter[entity]': 'lead',
                'filter[entity_id]': lead_id,
                'filter[type]': 'lead_added',  # –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π
                'limit': 10
            }
            
            response = requests.get(events_url, headers=headers, params=params)
            
            if response.status_code == 200:
                events = response.json().get('_embedded', {}).get('events', [])
                print(f"üì® –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")
                return events
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
                return []
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π AmoCRM: {e}")
            return []
    
    def send_to_manus(self, message_text, conversation_context=""):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Manus API –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"""
        try:
            print(f"üß† –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Manus: {message_text[:50]}...")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è Manus
            prompt = f"""
{self.knowledge_base}

–ö–û–ù–¢–ï–ö–°–¢ –î–ò–ê–õ–û–ì–ê:
{conversation_context}

–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê:
{message_text}

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –∏–º–µ–Ω–∏ —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞.
"""
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Manus API
            headers = {
                'Authorization': f"Bearer {self.manus_config['api_key']}",
                'Content-Type': 'application/json'
            }
            
            data = {
                'prompt': prompt,
                'mode': self.manus_config['mode']
            }
            
            response = requests.post(
                f"{self.manus_config['base_url']}/tasks",
                headers=headers,
                json=data
            )
            
            if response.status_code == 200:
                result = response.json()
                task_id = result.get('task_id')
                task_url = result.get('url')
                
                print(f"‚úÖ –ó–∞–¥–∞—á–∞ Manus —Å–æ–∑–¥–∞–Ω–∞: {task_id}")
                print(f"üîó URL: {task_url}")
                
                self.stats['manus_requests'] += 1
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
                self.db_cursor.execute('''
                    INSERT INTO conversations (message_text, message_type, manus_task_id)
                    VALUES (?, ?, ?)
                ''', (message_text, 'incoming', task_id))
                self.db_conn.commit()
                
                return {
                    'task_id': task_id,
                    'url': task_url,
                    'status': 'created'
                }
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ Manus API: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
                return None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Manus: {e}")
            return None
    
    def get_manus_result(self, task_id):
        """–ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç Manus API (–ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ API)"""
        try:
            # –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, Manus API –ø–æ–∫–∞ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å –≥–æ—Ç–æ–≤—ã–º –æ—Ç–≤–µ—Ç–æ–º
            
            print(f"üîÑ –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç Manus –¥–ª—è –∑–∞–¥–∞—á–∏: {task_id}")
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Manus (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)
            mock_response = """üö£‚Äç‚ôÇÔ∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–∏–º —Ç—É—Ä–∞–º!

–ü–æ —Ç—É—Ä–∞–º –Ω–∞ 3 –¥–Ω—è —É –Ω–∞—Å –µ—Å—Ç—å –æ—Ç–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:

üåü **"–°–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤"** (3 –¥–Ω—è/2 –Ω–æ—á–∏)
üí∞ –¶–µ–Ω–∞: 18,000 —Ä—É–±/—á–µ–ª
üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏ –æ—Ç 8 –ª–µ—Ç
üìç –ú–∞—Ä—à—Ä—É—Ç: –ö–æ—É—Ä–æ–≤–∫–∞ - –ß—É—Å–æ–≤–∞—è

üåü **"–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö"** (3 –¥–Ω—è/2 –Ω–æ—á–∏)
üí∞ –¶–µ–Ω–∞: 20,000 —Ä—É–±/—á–µ–ª
üèÉ‚Äç‚ôÇÔ∏è –î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞
üìç –ú–∞—Ä—à—Ä—É—Ç: –°—Ç–∞—Ä–æ—É—Ç–∫–∏–Ω—Å–∫ - –ß—É—Å–æ–≤–∞—è

**–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–æ:**
‚úÖ –†–∞—Ñ—Ç –∏ –≤—Å–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
‚úÖ –¢—Ä–µ—Ö—Ä–∞–∑–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
‚úÖ –û–ø—ã—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
‚úÖ –¢—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç/–¥–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞

üìÖ **–ë–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –¥–∞—Ç—ã:**
‚Ä¢ 15-17 –∏—é–Ω—è
‚Ä¢ 22-24 –∏—é–Ω—è  
‚Ä¢ 29 –∏—é–Ω—è - 1 –∏—é–ª—è

–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞—Å –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã! üòä"""
            
            return mock_response
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ Manus: {e}")
            return None
    
    def send_amocrm_message(self, lead_id, message_text):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ AmoCRM"""
        try:
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ AmoCRM: {message_text[:50]}...")
            
            if not self.amocrm_config['access_token']:
                print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–∞ AmoCRM")
                return False
            
            headers = {
                'Authorization': f"Bearer {self.amocrm_config['access_token']}",
                'Content-Type': 'application/json'
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ —Å–¥–µ–ª–∫–µ (—Ç–∞–∫ –∫–∞–∫ –ø—Ä—è–º–æ–π —á–∞—Ç —á–µ—Ä–µ–∑ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
            notes_url = f"https://{self.amocrm_config['subdomain']}.amocrm.ru/api/v4/leads/{lead_id}/notes"
            
            data = [
                {
                    'note_type': 'common',
                    'params': {
                        'text': f"ü§ñ –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:\\n\\n{message_text}"
                    }
                }
            ]
            
            response = requests.post(notes_url, headers=headers, json=data)
            
            if response.status_code == 200:
                print("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ AmoCRM")
                self.stats['responses_sent'] += 1
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
                self.db_cursor.execute('''
                    UPDATE conversations 
                    SET response_text = ?, amocrm_lead_id = ?
                    WHERE manus_task_id = (SELECT manus_task_id FROM conversations ORDER BY id DESC LIMIT 1)
                ''', (message_text, lead_id))
                self.db_conn.commit()
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ AmoCRM: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ AmoCRM: {e}")
            return False
    
    def process_single_message(self, test_message=None):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: AmoCRM ‚Üí Manus ‚Üí AmoCRM"""
        try:
            print("\\n" + "="*60)
            print("üîÑ –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø: AmoCRM ‚Üí Manus ‚Üí AmoCRM")
            print("="*60)
            
            # –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ AmoCRM (–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ)
            if test_message:
                message_text = test_message
                lead_id = 12345  # –¢–µ—Å—Ç–æ–≤—ã–π ID
                print(f"üß™ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text}")
            else:
                if not self.get_amocrm_access_token():
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω AmoCRM, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
                    message_text = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ —É –≤–∞—Å –µ—Å—Ç—å —Ç—É—Ä—ã –Ω–∞ 3 –¥–Ω—è?"
                    lead_id = 12345
                else:
                    messages = self.get_amocrm_messages()
                    if not messages:
                        print("‚ùå –°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ")
                        message_text = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ —É –≤–∞—Å –µ—Å—Ç—å —Ç—É—Ä—ã –Ω–∞ 3 –¥–Ω—è?"
                        lead_id = 12345
                    else:
                        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        message_text = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ —É –≤–∞—Å –µ—Å—Ç—å —Ç—É—Ä—ã –Ω–∞ 3 –¥–Ω—è?"  # –ó–∞–≥–ª—É—à–∫–∞
                        lead_id = messages[0].get('entity_id', 12345)
            
            print(f"üì• –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text}")
            print(f"üìã ID —Å–¥–µ–ª–∫–∏: {lead_id}")
            
            # –®–∞–≥ 2: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Manus –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            manus_result = self.send_to_manus(message_text)
            if not manus_result:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Manus")
                return False
            
            # –®–∞–≥ 3: –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Manus
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Manus...")
            time.sleep(3)  # –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            
            ai_response = self.get_manus_result(manus_result['task_id'])
            if not ai_response:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç Manus")
                return False
            
            print(f"üß† –û—Ç–≤–µ—Ç –æ—Ç Manus –ø–æ–ª—É—á–µ–Ω: {len(ai_response)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –®–∞–≥ 4: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ AmoCRM
            success = self.send_amocrm_message(lead_id, ai_response)
            
            if success:
                self.stats['messages_processed'] += 1
                print("\\n‚úÖ –°–û–û–ë–©–ï–ù–ò–ï –£–°–ü–ï–®–ù–û –û–ë–†–ê–ë–û–¢–ê–ù–û!")
                print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {self.stats['messages_processed']} —Å–æ–æ–±—â–µ–Ω–∏–π")
                return True
            else:
                print("\\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return False
    
    def show_stats(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–±–æ—Ç—ã"""
        uptime = datetime.now() - self.stats['start_time']
        
        print("\\n" + "="*50)
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò AmoCRM + Manus")
        print("="*50)
        print(f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime}")
        print(f"üì® –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {self.stats['messages_processed']}")
        print(f"üß† –ó–∞–ø—Ä–æ—Å–æ–≤ –∫ Manus: {self.stats['manus_requests']}")
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤: {self.stats['responses_sent']}")
        print(f"üéØ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {self.stats['responses_sent']}/{self.stats['messages_processed']}")
        print("="*50)
    
    def run_test(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
        print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò AmoCRM + Manus")
        print("="*50)
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        test_messages = [
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ —É –≤–∞—Å –µ—Å—Ç—å —Ç—É—Ä—ã –Ω–∞ 3 –¥–Ω—è?",
            "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —Å–µ–º–µ–π–Ω—ã–π —Å–ø–ª–∞–≤?",
            "–ö–∞–∫–∏–µ –¥–∞—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã –≤ –∏—é–Ω–µ?"
        ]
        
        for i, message in enumerate(test_messages, 1):
            print(f"\\nüß™ –¢–µ—Å—Ç {i}/{len(test_messages)}")
            success = self.process_single_message(message)
            
            if success:
                print(f"‚úÖ –¢–µ—Å—Ç {i} –ø—Ä–æ–π–¥–µ–Ω")
            else:
                print(f"‚ùå –¢–µ—Å—Ç {i} –ø—Ä–æ–≤–∞–ª–µ–Ω")
            
            time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
        
        self.show_stats()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ AmoCRM + Manus API Integration")
    print("–ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è: –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π ‚Üí –∞–Ω–∞–ª–∏–∑ –ò–ò ‚Üí –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç")
    print()
    
    integration = AmoCRMManusIntegration()
    
    while True:
        print("\\n" + "="*50)
        print("üìã –ú–ï–ù–Æ:")
        print("1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é")
        print("2. –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print("3. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("4. –í—ã—Ö–æ–¥")
        print("="*50)
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()
        
        if choice == '1':
            integration.run_test()
        elif choice == '2':
            message = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∏–ª–∏ Enter –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ): ").strip()
            integration.process_single_message(message if message else None)
        elif choice == '3':
            integration.show_stats()
        elif choice == '4':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main()
